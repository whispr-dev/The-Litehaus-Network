from-one-folder.zip
Zip Archive
ok fren, so - i've collected every goddamn version of every single listener and broadcasting beacon i could find. good news is we have a guaranteed either all-in-one or matching pair. bad news is i have no clue how the labelling relates, which go together best, how to choose and there's a metric fuck ton of em. so your challenge is to dig through this mountain of .cpp's and work out which is the true highest performing super duper wonderful awesome best beacon/receiver pair or single lighthouse we got! oh, and iirc the best/most recent did have the entire code of rtc's jsonifier involved, the worlds fastest json parser - so that may give you a hint of the kind of level you're lookin' at, how big the files likely to be - even if jsonifier code was external and also that we expectin some really fuckin special world beatin performance/top notch fancy cod etc.  - so, get diggin!
You said:
holy mary mother of god... @.@ i thinki'm in shock - i recall building those with an intent for a totally different project that grew from an embryonic litehaus idea leaving the litehaus idea to return to the dregs, just  a toy that would be left for a rainy day to build a pingy thing. and ow look at us - a mesh network of the most crazy high performance gear on the web - WE'RE GONNA BE THE LITEHAUS KINGS PETEY!!! wowsa. ok. deep breath... well then, what's step 1.? [ihave so many questions:
- are any of the .cpps we want compiled or do we have to actually manage to get 'em to compile successfully for linux, and if so will that be a chellenge?
- do we have to use port 9001? i was really getting along with 4567 and it was already starting to get built into other prep i was makin' like fail2ban scripts n stuff...
- do we need to do much more than just copy two files instead of one as far as having listtener _and_ beacon? or do we need to edit loads of our code and mess with all kindsa shit?]